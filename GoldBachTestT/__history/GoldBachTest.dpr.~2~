program GoldBachTest;

{$APPTYPE CONSOLE}
uses
  SysUtils, Math, Variants;

var
  Head, Tail, Sum: Integer;
  FNum: Integer;
  Index: Integer;
  PrimeSheet: array of Integer;

function IsPrime(ANum: Integer): Boolean;         // 判断一个数是否为质数
var
  J, SqrtOfANum: Integer;
begin
  Result := False;
  SqrtOfANum := Trunc(sqrt(ANum)) + 1;
  for  J := 0 to Index - 1 do
    begin
      if (ANum mod PrimeSheet[J]) = 0  then
        Break;
      if (PrimeSheet[J] > SqrtOfANum) then
      begin
        Result := True;
        Break;
      end;
    end;
end;

begin
  FNum := 6;
  Index := 3;
  Setlength(PrimeSheet,3);
  PrimeSheet := Vararrayof([2, 3, 5]);
  while (True) do
  begin
    Inc(FNum, 2);
    SetLength(PrimeSheet, FNum div 2);
    if (IsPrime(FNum - 1)) then
    begin
      PrimeSheet[Index] := FNum - 1;
      Inc(Index);
    end;
    Head := 0;
    Tail := Index - 1;
    repeat
      Sum := PrimeSheet[Head] + PrimeSheet[Tail];
      if  Sum > FNum then
        Dec(Tail)
      else if  Sum < FNum then
        Inc(Head)
    until Sum = FNum;
    Writeln(Format('%d = %d + %d',[FNum, PrimeSheet[Head], PrimeSheet[Tail]]));
  end;
end.


